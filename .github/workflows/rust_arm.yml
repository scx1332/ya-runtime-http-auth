name: Build for ARM

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main
      - release/*


jobs:
  build:
    name: Build
    env:
      RUSTFLAGS: "-D warnings -C opt-level=z -C target-cpu=x86-64 -C debuginfo=1"
      X86_64_PC_WINDOWS_MSVC_OPENSSL_DIR: c:/vcpkg/installed/x64-windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install openssl (Windows)
        if: runner.os == 'Windows'
        run: |
          vcpkg install openssl:x64-windows openssl:x64-windows-static
          vcpkg list
          vcpkg integrate install

      - name: Install Last Stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-musl
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target1-${{ hashFiles('**/Cargo.lock') }}


      - name: Build workspace
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace

      - name: Build proxy binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path crates/ya-http-proxy/Cargo.toml --bin ya-http-proxy --features bin
